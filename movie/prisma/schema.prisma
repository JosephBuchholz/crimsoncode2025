// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id
  email    String    @unique
  name     String
  password String
  sessions Session[]

  ratings     UserRating[]
  genres      UserGenre[]
  RatingGenre RatingGenre[]
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

enum FilmType {
  movie
  tv
}

model UserRating {
  userId String
  tmdbId Int
  type   FilmType
  rating Rating

  genres RatingGenre[]

  user    User   @relation(references: [id], fields: [userId], onDelete: Cascade)
  Genre   Genre? @relation(fields: [genreId], references: [id])
  genreId Int?

  @@id([userId, tmdbId, type])
}

enum Rating {
  positive
  unrated
  negative
}

model RatingGenre {
  userId  String
  tmdbId  Int
  type   FilmType
  genreId Int

  genre Genre @relation(references: [id], fields: [genreId])

  user             User        @relation(references: [id], fields: [userId], onDelete: Cascade)
  UserRating       UserRating? @relation(fields: [userRatingUserId, userRatingTmdbId, userRatingType], references: [userId, tmdbId, type])
  userRatingUserId String?
  userRatingTmdbId Int?
  userRatingType   FilmType?

  @@id([userId, tmdbId, genreId, type])
}

model UserGenre {
  userId  String
  genreId Int

  genre Genre @relation(references: [id], fields: [genreId])

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@id([userId, genreId])
}

model Genre {
  id          Int           @id @default(autoincrement())
  name        String
  tmdbMovieId Int
  tmdbTvId    Int
  UserGenre   UserGenre[]
  UserRating  UserRating[]
  RatingGenre RatingGenre[]
}
